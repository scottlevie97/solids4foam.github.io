/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.0                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.1;

vertices
(
    (-0.1 1 0)
    (-0.1 0 0)
    (-0.1 -0.1 0)
    (0 -0.1 0)
    (1 -0.1 0)
    (1.1 -0.1 0)
    (1.1 0 0)
    (1.1 1 0)
    (1 1 0)
    (1 0 0)
    (0 0 0)
    (0 1 0)

    (-0.1 1 0.1)
    (-0.1 0 0.1)
    (-0.1 -0.1 0.1)
    (0 -0.1 0.1)
    (1 -0.1 0.1)
    (1.1 -0.1 0.1)
    (1.1 0 0.1)
    (1.1 1 0.1)
    (1 1 0.1)
    (1 0 0.1)
    (0 0 0.1)
    (0 1 0.1)
);

blocks
(
    hex (1 10 11 0 13 22 23 12) (4 20 1) simpleGrading (1 1 1)
    hex (2 3 10 1 14 15 22 13) (4 4 1) simpleGrading (1 1 1)
    hex (3 4 9 10 15 16 21 22) (20 4 1) simpleGrading (1 1 1)
    hex (4 5 6 9 16 17 18 21) (4 4 1) simpleGrading (1 1 1)
    hex (9 6 7 8 21 18 19 20) (4 20 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    interface
    {
        type    patch;
        faces
        (
            (10 11 23 22)
            (9 10 22 21)
            (8 9 21 20)
        );
    }
    top
    {
        type    patch;
        faces
        (
            (11 0 12 23)
            (7 8 20 19)
        );
    }
    outside
    {
        type    patch;
        faces
        (
            (0 1 13 12)
            (1 2 14 13)
            (2 3 15 14)
            (3 4 16 15)
            (4 5 17 16)
            (5 6 18 17)
            (6 7 19 18)
        );
    }
    frontAndBack
    {
        type    empty;
        faces
        (
            (11 10 1 0)
            (10 3 2 1)
            (9 4 3 10)
            (6 5 4 9)
            (7 6 9 8)

            (12 13 22 23)
            (13 14 15 22)
            (22 15 16 21)
            (21 16 17 18)
            (20 21 18 19)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
