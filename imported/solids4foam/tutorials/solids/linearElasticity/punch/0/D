/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.0                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      D;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 0 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    punchLoading
    {
        type            solidTraction;
        traction        uniform (0 0 0);
        pressure        uniform 100e6;
        value           uniform (0 0 0);
    }
    cylinderFixed
    {
        type            fixedDisplacement;
        value           uniform (0 0 0);
    }
    punchContact
    {
        type            solidContact;
        master          yes;
        rigidMaster     no;
        shadowPatch     cylinderContact;
        normalContactModel standardPenalty;
        standardPenaltyNormalModelDict
        {
            relaxationFactor 0.01;
            penaltyScale     5;
        }
        //frictionContactModel frictionless;
        frictionContactModel standardPenalty;
        standardPenaltyFrictionModelDict
        {
            relaxationFactor  0.01;
            penaltyScale      1;
            frictionLaw       coulomb;
            frictionLawDict
            {
                frictionCoeff 0.1;
            }
        }
        value           uniform (0 0 0);
    }
    cylinderContact
    {
        type            solidContact;
        shadowPatch     punchContact;
        master          no;
        value           uniform (0 0 0);
    }
    punchTractionFree
    {
        type            solidTraction;
        traction        uniform ( 0 0 0 );
        pressure        uniform 0;
        value           uniform (0 0 0);
    }
    cylinderTractionFree
    {
        type            solidTraction;
        traction        uniform ( 0 0 0 );
        pressure        uniform 0;
        value           uniform (0 0 0);
    }
    symmx
    {
        type            solidSymmetry;
        patchType       symmetryPlane;
        value           uniform (0 0 0);
    }
    symmy
    {
        type            solidSymmetry;
        patchType       symmetryPlane;
        value           uniform (0 0 0);
    }
}

// ************************************************************************* //
